# -*- coding: utf-8 -*-
"""Cognitive Computing-1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1R0y8TeuqGhDZ1pfv6tMXeR8cuDTSGISy

Write a Python program to print "Anything You find cool."
"""

print("hehe")

"""Q2 Add Numbers and Concatenate Strings  
2.1 Write a program to add two numbers and print the result.                                  
"""

a = 10
b = 12
a+b

"""2.2 Write a program to concatenate two strings and print the result."""

a = "Taran"
b = "deep"
a+b

"""2.3 Write a program to concatenate a string and a number and print the result."""

print("Tarandeep"+str(28))

"""3.1 Write a Python program to check if a number is positive, negative, or zero
using an
if-else statement.
"""

a = 10
if a>0:
    print("positive")
elif a<0:
    print("negative")
else:
    print("zero")

"""3.2 Write a program to check if a given number is odd or even."""

a = 12
if a%2==0:
    print("even")
else:
    print("odd")

""" 4.1 Write a program to print numbers from 1 to 10 using a
for loop.
"""

for i in range(1,11):
  print(i)

"""4.2 Write a program to print numbers from 1 to 10 using a
while loop.
"""

i = 1
while i in range(1,11):
  print(i)
  i = i+1

"""4.3 Write a program to calculate the sum of numbers from 1 to 100 using a loop."""

total = 0
for i in range(1,101):
  total = total+i
print(total)

""" 5.1 Create a list of 5 numbers. Write a program to find the largest and smallest
numbers in the list.
"""

numbers = [1,2,3,4,5]
max = max(numbers)
min = min(numbers)
print(max)
print(min)

""" 5.2 Create a dictionary with at least 3 key-value pairs. Write a program to retrieve
the value of a given key.
"""

dictionary = {1: 'key',2: 'value',3: 'pairs'}
print(dictionary)

""" 5.3 Write a program to sort a list of numbers in ascending and descending order."""

numbers = [5,7,3,6,2,4,1]
numbers.sort()
print(numbers)
numbers.sort(reverse=True)
print(numbers)

""" 5.4 Write a program to merge two dictionaries into one."""

dictionary1 = {1: 'key',2: 'value',3: 'pairs'}
dictionary2 = {4: 'key',5: 'value',6: 'pairs'}
print(dictionary1|dictionary2)

""" 6.1 Write a program to count the number of vowels in a given string."""

string = "Tarandeep"
vowels = "aeiouAEIOU"
count = 0
for vowel in string:
  if vowel in vowels:
    count = count+1
print(count)

"""6.2 Write a program to reverse a string and print it."""

string = "Tarandeep"
reverse = string[::-1]
print(reverse)

""" 6.3 Write a program to check if a string is a palindrome."""

string = "level"
reverse = string[::-1]
if string == reverse:
  print("palindrome")
else:
  print("not palindrome")

"""7.1 Write a program to create a text file, write some text into it, and then read and
print the content.
"""

f = open("text.txt","w")
f.write("Tarandeep")
f.close()
f = open("text.txt","r")
print(f.read())

""" 7.2 Write a program to append text to an existing file and print the updated
content.
"""

f = open("text.txt","w")
f.write("Tarandeep")
f.close()
f= open("text.txt","a")
f.write("Singh")
f.close()
f = open("text.txt","r")
print(f.read())

"""7.3 Write a program to count the number of lines in a text file."""

f = open("text.txt","w")
f.write("Tarandeep")
f.close()
f = open("text.txt","r")
print(len(f.readlines()))

""" 8.1 Write a program to handle division by zero using a
try-except block
"""

a = int(input("Enter a:"))
b = int(input("enter b:"))
try:
  print(a/b)
except ZeroDivisionError:
  print("Enter a valid number")

"""8.2 Write a program to handle invalid input (e.g., when the user enters a string
instead of a number).
"""

try:
  a = int(input("Enter a:"))
  print(a)
except ValueError:
  print("Enter a integer value only")

"""8.3 Write a program to demonstrate the use of
finally in exception handling.
"""

a = int(input("Enter a:"))
b = int(input("Enter b:"))
try:
  print(a/b)
except ZeroDivisionError:
  print("Enter a valid number")
except ValueError:
  print("Enter a integer value only")
finally:
  print("Program completed with no error")

""" 9.1 Write a program to generate 5 random numbers between 1 and 100 and print
them.
"""

import random
for i in range(5):
  print("5 random numbers are:", random.randint(1,100))

"""9.2 Write a program to generate a random number and check if it is prime."""

import random
number = random.randint(1,100)
print("Random number is ", number)
for i in range(2,number):
  if number%i==0:
    print("Not prime")
    break
else:
  print("Prime")

"""9.3 Write a program to simulate rolling a six-sided die."""

import random
number = random.randint(1,6)
print("Random number is ", number)

"""9.4 Write a program to shuffle a list of numbers."""

import random
numbers = [1,2,3,4,5,6,7,8]
random.shuffle(numbers)
print(numbers)

"""9.5 Write a program to randomly select an item from a list."""

import random
item = ['gursher', 'taran', 'ansh', 'sehaj']
print(random.choice(item))

"""9.6 Write a program to generate a random password of given length."""

import random

password = ""
length = int(input("Enter the length of password: "))

if length < 4:
  print("Invalid length entered , minimum length is 4")
# length = 4

uppercas = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
lowercas = "abcdefghijklmnopqrstuvwxyz"
number = "0123456789"
symbols = "!@#$%^"

password += random.choice(uppercas)+random.choice(lowercas)+random.choice(number)+random.choice(symbols)

allSum = uppercas + lowercas + number + symbols

for i in range(length - 4):
  password += random.choice(allSum)

passwordFinal = list(password)
random.shuffle(passwordFinal)
password = "".join(passwordFinal)

print("Password is : " , password)

""" 9.7 Write a program to pick a random card from a standard deck of 52 cards."""

import random
suits=["hearts","diamonds","clubs","spades"]
ranks=["ace","2","3","4","5","6","7","8","9","10","jack","queen","king"]
rs=random.choice(suits)
rr=random.choice(ranks)
print("Card: ",rr," of ",rs)

"""10.1 Write a program to accept two numbers as command-line arguments, add
them, and print the result.
"""

import sys
if len(sys.argv) != 3:
    print("Usage: python script_name.py <number1> <number2>")
    sys.exit(1)
number1 = float(sys.argv[1])
number2 = float(sys.argv[2])
result = number1 + number2
print(f"The sum of {number1} and {number2} is: {result}")

"""10.2 Write a program to accept a string as a command-line argument and print its
length.
"""

import sys
if len(sys.argv) != 2:
    print("Usage: python script_name.py <string>")
    sys.exit(1)
input_string = sys.argv[1]
string_length = len(input_string)
print(f"The length of the string '{input_string}' is: {string_length}")
# doubt in this question

""" 11.1 Write a program to use the
math library to calculate the square root of a given
number.
"""

import math
def calculate_square_root(number):
    return math.sqrt(number)
number = 9
square_root = calculate_square_root(number)
print(f"The square root of {number} is: {square_root}")

"""11.2 Write a program to use the
datetime library to print the current date and time.
"""

import datetime

def print_current_datetime():
    current_datetime = datetime.datetime.now()
    print(f"The current date and time is: {current_datetime}")
print_current_datetime()

"""11.3 Write a program to use the
os library to list all files in the current directory.
"""

import os

def list_files_in_current_directory():
    files = os.listdir('.')
    return files
files = list_files_in_current_directory()
print("Files in the current directory:")
for file in files:
    print(file)